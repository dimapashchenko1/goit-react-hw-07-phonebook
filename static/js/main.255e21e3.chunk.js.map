{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.js","components/Form/Form.js","redux/filter/filter-actions.js","components/Filter/Filter.js","App.js","redux/filter/filter-reducer.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","axios","defaults","baseURL","getContacts","createAsyncThunk","a","get","then","response","data","contacts","addContact","name","number","contact","post","removeContact","id","contactId","delete","getContactsFromState","state","entities","getFilterFromState","filter","ContactList","useSelector","dispatch","useDispatch","useEffect","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","className","css","list","map","listItem","btn","type","onClick","Form","useState","setName","setNumber","handleChange","e","currentTarget","value","s","form","onSubmit","preventDefault","label","placeholder","pattern","title","required","onChange","input","createAction","Filter","App","filterReducer","createReducer","action","payload","contactsSlice","createSlice","initialState","isLoading","error","extraReducers","fulfilled","pending","rejected","store","configureStore","reducer","devTools","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.255e21e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2GULq\",\"listItem\":\"ContactList_listItem__1noWe\",\"btn\":\"ContactList_btn__2jDYE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2VJhp\",\"input\":\"Filter_input__1mfiW\"};","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:7777\";\n\nexport const fetchContacts = () => {\n  return axios.get(\"/contacts\").then((response) => response.data);\n};\n\nexport const addContact = (contact) => {\n  return axios.post(\"/contacts\", contact).then(({ data }) => data);\n};\n\nexport const deleteContact = (contactId) => {\n  return axios.delete(`/contacts/${contactId}`);\n};\n","import * as jsonServerApi from \"./contacts-api\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getContacts = createAsyncThunk(\n  \"contacts/fetchContacts\",\n  async () => {\n    const contacts = await jsonServerApi.fetchContacts();\n    return contacts;\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContact\",\n  async ({ name, number }) => {\n    const contacts = await jsonServerApi.addContact({ name, number });\n    return contacts;\n  }\n);\n\nexport const removeContact = createAsyncThunk(\n  \"contacts/removeContact\",\n  async (id) => {\n    await jsonServerApi.deleteContact(id);\n    return id;\n  }\n);\n","export const getContactsFromState = (state) => state.contacts.entities;\nexport const getFilterFromState = (state) => state.filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport css from \"./ContactList.module.css\";\nimport {\n  getContacts,\n  removeContact,\n} from \"../../redux/contacts/contacts-operations\";\nimport {\n  getContactsFromState,\n  getFilterFromState,\n} from \"../../redux/contacts/contacts-selectors\";\n\nexport default function ContactList() {\n  const contacts = useSelector(getContactsFromState);\n  const filter = useSelector(getFilterFromState);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  function getVisibleContacts() {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <ul className={css.list}>\n      {visibleContacts &&\n        visibleContacts.map(({ name, number, id }) => (\n          <li className={css.listItem} key={id}>\n            {`${name}: ${number}`}\n            <button\n              className={css.btn}\n              type=\"button\"\n              onClick={() => dispatch(removeContact(id))}\n            >\n              Remove\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","import { useState } from \"react\";\nimport s from \"./Form.module.css\";\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\nimport { useDispatch } from \"react-redux\";\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(addContact({ name, number }));\n    setNumber(\"\");\n    setName(\"\");\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Steve Jobs\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n          value={name}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"+38(0XX)-XXX-XX-XX\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n          value={number}\n          className={s.input}\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// const mapStateToProps = (state) => {\n//   return { contacts: state.contacts };\n// };\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//     addContact: (name, number) => dispatch(addContact(name, number)),\n//   };\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const filter = createAction(\"filter/filter\");\n","import { useSelector, useDispatch } from \"react-redux\";\nimport css from \"./Filter.module.css\";\nimport { filter } from \"../../redux/filter/filter-actions\";\n\nexport default function Filter() {\n  const value = useSelector((state) => state.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={css.label}>\n      Filter\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter contact name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={(e) => dispatch(filter(e.currentTarget.value))}\n      ></input>\n    </label>\n  );\n}\n","import ContactList from \"./components/ContactList/ContactList\";\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter\";\nimport css from \"./App.css\";\n\nexport default function App() {\n  return (\n    <>\n      <h1 className={css}>Phonebook</h1>\n      <Form />\n      <h2 className={css}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import { filter } from \"./filter-actions\";\nimport { createReducer } from \"@reduxjs/toolkit\";\n\nexport const filterReducer = createReducer(\"\", {\n  [filter]: (state, action) => action.payload,\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { getContacts, addContact, removeContact } from \"./contacts-operations\";\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: { entities: [], isLoading: false, error: null },\n  extraReducers: {\n    [getContacts.fulfilled]: (state, action) => ({\n      ...state,\n      entities: action.payload,\n      isLoading: false,\n    }),\n    [getContacts.pending]: (state) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [getContacts.rejected]: (state) => ({\n      ...state,\n      isLoading: false,\n    }),\n\n    [addContact.fulfilled]: (state, action) => ({\n      ...state,\n      entities: [...state.entities, action.payload],\n      isLoading: false,\n    }),\n    [addContact.pending]: (state) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [addContact.rejected]: (state) => ({\n      ...state,\n      isLoading: false,\n    }),\n\n    [removeContact.fulfilled]: (state, action) => ({\n      ...state,\n      entities: state.entities.filter(({ id }) => id !== action.payload),\n      isLoading: false,\n    }),\n    [removeContact.pending]: (state) => ({\n      ...state,\n      isLoading: true,\n    }),\n    [removeContact.rejected]: (state) => ({\n      ...state,\n      isLoading: false,\n    }),\n  },\n});\n\nexport default contactsSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { filterReducer } from \"./filter/filter-reducer\";\nimport contactsSlice from \"./contacts/contacts-reducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsSlice,\n    filter: filterReducer,\n  },\n  devTools: composeWithDevTools,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__Qphm_\",\"label\":\"Form_label__3ytiF\",\"btn\":\"Form_btn__DqRIT\",\"input\":\"Form_input__3Omix\"};"],"sourceRoot":""}